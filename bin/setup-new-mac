#!/usr/bin/env bash

set -e

# Create symlinks from iCloud to home directory
cd "$HOME"
[ ! -L icloud-drive ] && ln -s "$HOME/Library/Mobile Documents/com~apple~CloudDocs" icloud-drive

for link in .gemrc .gitconfig .gitignore_global .homebridge .profile .bash_profile .bashrc .vim .vimrc bin .vscode .zprofile .zshenv .zshrc .fzf.zsh .fzf.bash; do
  if [ -L "$HOME/$link" ]; then
    echo "Link '$link' already exists"
  else
    ln -s "icloud-drive/dotfiles/$link" .
  fi
done

## link .ssh config
mkdir -p "$HOME/.ssh"
cd "$HOME/.ssh"
[ ! -L config ] && ln -s ../icloud-drive/dotfiles/.ssh/config .
cd ..

# Set macOS default hidden settings

## Disabling shadows on windows when taking screenshots - requires killall SystemUIServer
#defaults write com.apple.screencapture disable-shadow -bool true
## allow disabling inline video in safari http://www.kirkville.com/stop-auto-play-videos-from-annoying-you-in-your-browser/
#defaults write com.apple.Safari WebKitMediaPlaybackAllowsInline -bool false
#defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2AllowsInlineMediaPlayback -bool false

if command -v brew > /dev/null; then
  echo "Homebrew installed; updating:"
  brew update
else
  /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
fi

brew list -1 > brew.list
for pkg in bash-completion git hub awscli pyenv pyenv-virtualenv rbenv ruby-build nodenv node-build stern kubectx direnv kubernetes-helm ripgrep wget tree jid jq fzf sops golang dep glide docker docker-compose peco; do
  if grep -q "^${pkg}\$" brew.list; then
    echo "Package '$pkg' is installed; updating:"
    brew upgrade "$pkg" --cleanup || true
  else
    brew install "$pkg"
  fi
done
rm brew.list

git config --global user.name 'Yusuke KUOKA'
git config --global user.email 'ykuoka@gmail.com'
git config --global core.editor 'code --wait'

if ! which minikube > /dev/null; then
  curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.25.0/minikube-darwin-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
fi

if ! which kubectl > /dev/null; then
  curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/darwin/amd64/kubectl
  chmod +x ./kubectl
  sudo mv ./kubectl /usr/local/bin/kubectl
fi

## Set up node
eval "$(nodenv init -)"
for NODE_VERSION in 6.9.2 8.9.0 9.0.0; do
  if [ -d ".nodenv/versions/$NODE_VERSION" ]; then
    echo "Node $NODE_VERSION already installed"
  else
    nodenv install "$NODE_VERSION"
  fi
done

## Set up ruby
eval "$(rbenv init -)"
for RUBY_VERSION in 2.3.5 2.4.2; do
  if [ -d ".rbenv/versions/$RUBY_VERSION" ]; then
    echo "Ruby $RUBY_VERSION already installed"
  else
    rbenv install "$RUBY_VERSION"
    rbenv shell "$RUBY_VERSION"
    gem install bundler
  fi
done

## Set up python
PY2_VERSION="2.7.14"
PY3_VERSION="3.6.3"

install_pyver_if_missing() {
  if ! grep $1 pyenv.versions > /dev/null; then
    pyenv install $1
  fi
}

pyenv versions > pyenv.versions
for pyver in $PY2_VERSION $PY3_VERSION; do
  install_pyver_if_missing $pyver
done
rm pyenv.versions

pyenv global $PY3_VERSION $PY2_VERSION

pip3 install --upgrade onelogin-aws-cli

# Run profile
source .profile

